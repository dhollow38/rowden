name: Python Lambda Deployment with Terraform

on:
  push:
  pull_request:

jobs:
  deploy:
    name: Deploy and Lint
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'eu-west-2'  # Your AWS region
      ZIP_FILE: 'lambda_source_code/lambda_ec2_shut_down.zip'  # Name of the zipped Lambda function file
      UNZIP_DIR: 'unzipped_lambda_code'  # Directory to unzip the Lambda source files

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Use the latest version of Python 3

      - name: Unzip Lambda function
        run: |
          mkdir ${{ env.UNZIP_DIR }}
          unzip ${{ env.ZIP_FILE }} -d ${{ env.UNZIP_DIR }}

      - name: Install Python linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with Flake8
        run: |
          flake8 ${{ env.UNZIP_DIR }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: true
          
      - name: Initialize Terraform
        run: terraform init

      - name: Format Terraform code
        run: terraform fmt -check

      - name: Validate Terraform configuration
        run: terraform validate

      #- name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v1
      #  with:
      #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
        run: terraform apply -auto-approve
